//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PropertyTaxBusters.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PropertyTaxBustersEntities : DbContext
    {
        public PropertyTaxBustersEntities()
            : base("name=PropertyTaxBustersEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ErrorLog_TBL> ErrorLog_TBL { get; set; }
        public virtual DbSet<FallOut_TBL> FallOut_TBL { get; set; }
        public virtual DbSet<Property_TBL> Property_TBL { get; set; }
        public virtual DbSet<PropertyAppealValues_TBL> PropertyAppealValues_TBL { get; set; }
        public virtual DbSet<PropertyAssessedValue_TBL> PropertyAssessedValue_TBL { get; set; }
        public virtual DbSet<PropertyScrapeData_TBL> PropertyScrapeData_TBL { get; set; }
        public virtual DbSet<PropertyScrapeDetail_TBL> PropertyScrapeDetail_TBL { get; set; }
    
        public virtual ObjectResult<PropertyScrapeData_TBL> GetScrapeDataByTableName(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PropertyScrapeData_TBL>("GetScrapeDataByTableName", tableNameParameter);
        }
    
        public virtual ObjectResult<PropertyScrapeData_TBL> GetScrapeDataByTableName(string tableName, MergeOption mergeOption)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PropertyScrapeData_TBL>("GetScrapeDataByTableName", mergeOption, tableNameParameter);
        }
    }
}
